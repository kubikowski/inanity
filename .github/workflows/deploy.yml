name: Bump Version & Deploy

on:
    push:
        branches:
            -   development
        paths-ignore:
            -   'package.json'
            -   'package-lock.json'

jobs:
    test:
        name: Lint, Build, & Test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Branch
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}

            -   name: Install dependencies
                run: npm install

            -   name: Lint
                run: npm run lint

            -   name: Build
                run: npm run build -- --configuration=ci

            -   name: Test
                run: npm test

    bump-version:
        name: Bump Version
        needs: test
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout Branch
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.REPOSITORY_ACTIONS_TOKEN }}

            -   name: Pull Branch
                run: git pull

            -   name: Sign Commits
                uses: crazy-max/ghaction-import-gpg@master
                with:
                    gpg_private_key: ${{ secrets.ACTIONS_GPG_PRIVATE_KEY }}
                    passphrase: ${{ secrets.ACTIONS_GPG_PASSPHRASE }}
                    git_user_signingkey: true
                    git_commit_gpgsign: true

            -   name: Automated Version Bump
                uses: phips28/gh-action-bump-version@master
                env:
                    GITHUB_TOKEN: ${{ secrets.REPOSITORY_ACTIONS_TOKEN }}
                    GITHUB_USER: ${{ secrets.REPOSITORY_ACTIONS_USER }}
                    GITHUB_EMAIL: ${{ secrets.REPOSITORY_ACTIONS_EMAIL }}
                with:
                    minor-wording: 'feature: '
                    tag-prefix: 'v'

    deploy-production:
        name: Deploy Production
        needs: bump-version
        runs-on: ubuntu-latest
        environment:
            name: Production
            url: https://inanity.io
        steps:
            -   name: Checkout Branch
                uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
                    fetch-depth: 2

            -   name: Pull Branch
                run: git pull

            -   name: Install dependencies
                run: npm install

            -   name: Build Production
                run: npm run build -- --configuration=production

            -   uses: FirebaseExtended/action-hosting-deploy@v0
                with:
                    repoToken: ${{ secrets.GITHUB_TOKEN }}
                    firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_INANITY_IO }}
                    projectId: inanity-io
                    channelId: live
