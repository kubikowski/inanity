{
	"root": true,
	"overrides": [
		{
			"files": [
				"*.js"
			],
			"parserOptions": {
				"ecmaVersion": "latest",
				"sourceType": "module"
			},
			"env": {
				"es6": true
			},
			"extends": [
				"eslint:recommended"
			],
			"plugins": [
				"import"
			],
			"rules": {
				"array-bracket-spacing": [
					"error",
					"always"
				],
				"arrow-body-style": [
					"error",
					"as-needed"
				],
				"arrow-parens": [
					"error",
					"as-needed"
				],
				"brace-style": "error",
				"comma-dangle": [
					"error",
					"always-multiline"
				],
				"func-style": [
					"error",
					"declaration"
				],
				"import/order": [
					"error",
					{
						"alphabetize": {
							"order": "asc",
							"caseInsensitive": true
						}
					}
				],
				"indent": [
					"error",
					"tab",
					{
						"SwitchCase": 1
					}
				],
				"max-len": "off",
				"no-shadow": "error",
				"no-var": "error",
				"no-void": "error",
				"no-undefined": "error",
				"object-curly-spacing": [
					"error",
					"always"
				],
				"prefer-const": "error",
				"prefer-template": "error",
				"quotes": [
					"error",
					"single"
				],
				"semi": "error"
			}
		},
		{
			"files": [
				"*.ts"
			],
			"parser": "@typescript-eslint/parser",
			"parserOptions": {
				"project": [
					"tsconfig.json"
				],
				"createDefaultProgram": true,
				"sourceType": "module"
			},
			"extends": [
				"eslint:recommended",
				"plugin:@typescript-eslint/eslint-recommended",
				"plugin:@typescript-eslint/recommended",
				"plugin:@typescript-eslint/recommended-requiring-type-checking"
			],
			"plugins": [
				"@typescript-eslint",
				"import"
			],
			"rules": {
				"@typescript-eslint/comma-dangle": [
					"error",
					"always-multiline"
				],
				"@typescript-eslint/explicit-member-accessibility": [
					"error",
					{
						"accessibility": "explicit"
					}
				],
				"@typescript-eslint/member-delimiter-style": [
					"error",
					{
						"multiline": {
							"delimiter": "semi",
							"requireLast": true
						},
						"singleline": {
							"delimiter": "comma",
							"requireLast": false
						}
					}
				],
				"@typescript-eslint/member-ordering": [
					"error",
					{
						"default": [
							"field",
							"constructor",
							"method"
						]
					}
				],
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "default",
						"format": [
							"camelCase"
						]
					},
					{
						"selector": "function",
						"format": [
							"camelCase",
							"PascalCase"
						]
					},
					{
						"selector": "parameter",
						"format": [
							"camelCase"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "variable",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"const"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase"
						],
						"modifiers": [
							"private"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase"
						],
						"modifiers": [
							"protected"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"private",
							"static"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"protected",
							"static"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"private",
							"readonly"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"protected",
							"readonly"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "property",
						"format": [
							"camelCase",
							"PascalCase",
							"UPPER_CASE"
						],
						"modifiers": [
							"readonly"
						]
					},
					{
						"selector": "parameterProperty",
						"format": [
							"camelCase"
						],
						"modifiers": [
							"private"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "parameterProperty",
						"format": [
							"camelCase"
						],
						"modifiers": [
							"protected"
						],
						"leadingUnderscore": "allow"
					},
					{
						"selector": "typeLike",
						"format": [
							"PascalCase"
						]
					},
					{
						"selector": "enumMember",
						"format": [
							"UPPER_CASE"
						]
					}
				],
				"@typescript-eslint/no-explicit-any": "error",
				"@typescript-eslint/no-floating-promises": "off",
				"@typescript-eslint/no-misused-promises": "off",
				"@typescript-eslint/no-non-null-assertion": "off",
				"@typescript-eslint/no-shadow": "error",
				"array-bracket-spacing": [
					"error",
					"always"
				],
				"@typescript-eslint/no-unused-vars": [
					"error",
					{
						"args": "all",
						"argsIgnorePattern": "^_",
						"caughtErrors": "all",
						"caughtErrorsIgnorePattern": "^_",
						"destructuredArrayIgnorePattern": "^_",
						"varsIgnorePattern": "^_",
						"ignoreRestSiblings": true
					}
				],
				"arrow-body-style": [
					"error",
					"as-needed"
				],
				"arrow-parens": [
					"error",
					"as-needed"
				],
				"brace-style": "error",
				"comma-dangle": "off",
				"func-style": [
					"error",
					"declaration"
				],
				"import/order": [
					"error",
					{
						"alphabetize": {
							"order": "asc",
							"caseInsensitive": true
						}
					}
				],
				"indent": [
					"error",
					"tab",
					{
						"SwitchCase": 1
					}
				],
				"max-len": "off",
				"no-shadow": "off",
				"no-var": "error",
				"no-void": "off",
				"no-undefined": "off",
				"no-useless-escape": "off",
				"object-curly-spacing": [
					"error",
					"always"
				],
				"prefer-const": "error",
				"prefer-template": "error",
				"quotes": [
					"error",
					"single"
				],
				"semi": "error"
			}
		},
		{
			"files": [
				"*.html"
			],
			"extends": [
				"plugin:@angular-eslint/template/recommended"
			],
			"rules": {
				"@angular-eslint/template/no-negated-async": "off",
				"@angular-eslint/template/eqeqeq": "error"
			}
		}
	]
}
